<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.fudanuniversity.cms.repository.mapper.CmsRecorderMapper">

    <!-- 返回结果集 -->
    <resultMap id="CmsRecorderMap" type="com.fudanuniversity.cms.repository.entity.CmsRecorder">
        <result column="id" property="id"/>
        <result column="date" property="date"/>
        <result column="recorder1_id" property="recorder1Id"/>
        <result column="recorder1_file" property="recorder1File"/>
        <result column="recorder1_content" property="recorder1Content"/>
        <result column="recorder2_id" property="recorder2Id"/>
        <result column="recorder2_file" property="recorder2File"/>
        <result column="recorder2_content" property="recorder2Content"/>
        <result column="summarizer_id" property="summarizerId"/>
        <result column="summarizer_file" property="summarizerFile"/>
        <result column="summarizer_content" property="summarizerContent"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
    </resultMap>

    <!-- 字段列表信息 -->
    <sql id="_field_list">
        `id`, `date`, `recorder1_id`, `recorder1_file`, `recorder1_content`, `recorder2_id`, `recorder2_file`, `recorder2_content`, `summarizer_id`, `summarizer_file`, `summarizer_content`, `create_time`,  `modify_time`
    </sql>

    <!-- 值列表信息 -->
    <sql id="_value_list">
        #{id}, #{date}, #{recorder1Id}, #{recorder1File}, #{recorder1Content}, #{recorder2Id}, #{recorder2File}, #{recorder2Content}, #{summarizerId}, #{summarizerFile}, #{summarizerContent}, #{createTime},  #{modifyTime}
    </sql>

    <!-- 普通条件查询 -->
    <sql id="_common_where">
        <if test="id != null">
            AND `id` = #{id}
        </if>
        <if test="idList != null and idList.size() > 0">
            AND `id` IN
            <foreach collection="idList" item="id"
                     open="( " separator=" , " close=" )">
                #{id}
            </foreach>
        </if>
        <if test="date != null">
            AND `date` = #{date}
        </if>
        <if test="recorder1Id != null">
            AND `recorder1_id` = #{recorder1Id}
        </if>
        <if test="recorder1File != null">
            AND `recorder1_file` = #{recorder1File}
        </if>
        <if test="recorder1Content != null">
            AND `recorder1_content` = #{recorder1Content}
        </if>
        <if test="recorder2Id != null">
            AND `recorder2_id` = #{recorder2Id}
        </if>
        <if test="recorder2File != null">
            AND `recorder2_file` = #{recorder2File}
        </if>
        <if test="recorder2Content != null">
            AND `recorder2_content` = #{recorder2Content}
        </if>
        <if test="summarizerId != null">
            AND `summarizer_id` = #{summarizerId}
        </if>
        <if test="summarizerFile != null">
            AND `summarizer_file` = #{summarizerFile}
        </if>
        <if test="summarizerContent != null">
            AND `summarizer_content` = #{summarizerContent}
        </if>
        <if test="eltCreateTime != null">
            <![CDATA[
            AND `create_time` <= #{eltCreateTime}
            ]]>
        </if>
        <if test="egtCreateTime != null">
            <![CDATA[
            AND `create_time` >= #{egtCreateTime}
            ]]>
        </if>
        <if test="eltModifyTime != null">
            <![CDATA[
            AND `modify_time` <= #{eltModifyTime}
            ]]>
        </if>
        <if test="egtModifyTime != null">
            <![CDATA[
            AND `modify_time` >= #{egtModifyTime}
            ]]>
        </if>
    </sql>

    <!-- 通用排序 -->
    <sql id="_common_sorts">
        <if test="sorts != null">
            ORDER BY
            <foreach collection="sorts" item="item" separator=",">
                ${item.columnName} ${item.sortMode.mode}
            </foreach>
        </if>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            `cms_recorder`(`date`, `recorder1_id`, `recorder1_file`, `recorder1_content`, `recorder2_id`, `recorder2_file`, `recorder2_content`, `summarizer_id`, `summarizer_file`, `summarizer_content`, `create_time`, `modify_time`)
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{date}, #{recorder1Id}, #{recorder1File}, #{recorder1Content}, #{recorder2Id}, #{recorder2File}, #{recorder2Content}, #{summarizerId}, #{summarizerFile}, #{summarizerContent}, #{createTime}, #{modifyTime}
        </trim>
    </insert>

    <insert id="bulkUpsert" parameterType="list">
        INSERT INTO
            `cms_recorder`(`date`, `recorder1_id`, `recorder1_file`, `recorder1_content`, `recorder2_id`, `recorder2_file`, `recorder2_content`, `summarizer_id`, `summarizer_file`, `summarizer_content`, `create_time`, `modify_time`)
        VALUES
        <foreach collection="list" item="data" separator=",">
            (#{data.date}, #{data.recorder1Id}, #{data.recorder1File}, #{data.recorder1Content}, #{data.recorder2Id}, #{data.recorder2File}, #{data.recorder2Content}, #{data.summarizerId}, #{data.summarizerFile}, #{data.summarizerContent}, #{data.createTime}, #{data.modifyTime})
        </foreach>
        ON DUPLICATE KEY UPDATE
       `date` = VALUES(`date`), 
       `recorder1_id` = VALUES(`recorder1_id`), 
       `recorder1_file` = VALUES(`recorder1_file`), 
       `recorder1_content` = VALUES(`recorder1_content`), 
       `recorder2_id` = VALUES(`recorder2_id`), 
       `recorder2_file` = VALUES(`recorder2_file`), 
       `recorder2_content` = VALUES(`recorder2_content`), 
       `summarizer_id` = VALUES(`summarizer_id`), 
       `summarizer_file` = VALUES(`summarizer_file`), 
       `summarizer_content` = VALUES(`summarizer_content`), 
       `create_time` = `create_time`, 
       `modify_time` = VALUES(`modify_time`)
    </insert>

    <update id="updateById">
        UPDATE `cms_recorder`
        <trim prefix="SET" suffixOverrides=",">
            <if test="date != null">
                `date` = #{date},
            </if>
            <if test="recorder1Id != null">
                `recorder1_id` = #{recorder1Id},
            </if>
            <if test="recorder1File != null">
                `recorder1_file` = #{recorder1File},
            </if>
            <if test="recorder1Content != null">
                `recorder1_content` = #{recorder1Content},
            </if>
            <if test="recorder2Id != null">
                `recorder2_id` = #{recorder2Id},
            </if>
            <if test="recorder2File != null">
                `recorder2_file` = #{recorder2File},
            </if>
            <if test="recorder2Content != null">
                `recorder2_content` = #{recorder2Content},
            </if>
            <if test="summarizerId != null">
                `summarizer_id` = #{summarizerId},
            </if>
            <if test="summarizerFile != null">
                `summarizer_file` = #{summarizerFile},
            </if>
            <if test="summarizerContent != null">
                `summarizer_content` = #{summarizerContent},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="modifyTime != null">
                `modify_time` = #{modifyTime},
            </if>
        </trim>
        WHERE `id` = #{id}
        LIMIT 1
    </update>

    <delete id="deleteById">
        <![CDATA[
        DELETE FROM `cms_recorder` WHERE `id` = #{id} LIMIT 1
        ]]>
    </delete>

    <select id="selectListByParam" parameterType="map" resultMap="CmsRecorderMap">
        SELECT
        <include refid="_field_list"/>
        FROM `cms_recorder`
        <trim prefix="WHERE" prefixOverrides="AND" suffix="">
            <include refid="_common_where"/>
        </trim>
        <include refid="_common_sorts"/>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCountByParam" parameterType="map" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM `cms_recorder`
        <trim prefix="WHERE" prefixOverrides="AND" suffix="">
            <include refid="_common_where"/>
        </trim>
    </select>
</mapper>